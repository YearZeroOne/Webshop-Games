@using WebShopLib.Models;
@model IEnumerable<WebShopLib.Models.Product>
@inject WebShopLib.Models.ApplicationDbContext _context

@{
    ViewData["Title"] = "Index";

    var currentUser = _context.Employees.Where(x => x.Guid == Context.Request.Cookies["guid"]).FirstOrDefault();
}

<h1>Index</h1>

<style>
    .dropbtn {
        background-color: #04AA6D;
        color: white;
        padding: 16px;
        font-size: 16px;
        border: none;
    }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            .dropdown-content a:hover {
                background-color: #ddd;
            }

    .dropdown:hover .dropdown-content {
        display: block;
    }

    .dropdown:hover .dropbtn {
        background-color: #3e8e41;
    }
</style>

<div class="container">
    <div class="row justify-content-center mb-3">
        <div class="col-md-12 col-xl-10">


            <table>
                <tr>
                    <td>
                        <a asp-action="NewProduct" asp-controller="Product" class="btn btn-success">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bag-plus" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 7.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0v-1.5H6a.5.5 0 0 1 0-1h1.5V8a.5.5 0 0 1 .5-.5z" />
                                <path d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z" />

                            </svg> Produkt
                        </a>
                        <a asp-action="NewProductGenre" asp-controller="Product" class="btn btn-success">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bag-plus" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 7.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0v-1.5H6a.5.5 0 0 1 0-1h1.5V8a.5.5 0 0 1 .5-.5z" />
                                <path d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z" />

							</svg> Genre
						</a>


                        <button class="btn btn-danger" type="button" data-bs-toggle="offcanvas" data-bs-target="#filter-sidebar" aria-controls="filter-sidebar" style="z-index: 1050;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
                                <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z" />

                            </svg>Filter
                        </button>

                    </td>
                </tr>
                <form method="get" asp-action="Index">
                    <table>
                        <tr>
                            <td><button class="btn btn-danger" type="submit">Reset</button></td>
                        </tr>
                    </table>
                </form>
            </table>


            <div class="offcanvas offcanvas-start" tabindex="-1" id="filter-sidebar" aria-labelledby="filter-sidebar-label" style="z-index: 1049; overflow: scroll;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="filter-sidebar-label">Filter</h5>

                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">

                    <form id="filter-form" method="get" asp-action="Filter">
                        <h5>Publisher</h5>


                        @using (var context = new ApplicationDbContext())
                        {
                            var developers = context.Developers
                            .Select(x => x.Name)
                            .ToList();
                            foreach (var developer in developers)
                            {
                                <input type="checkbox" id="@developer" name="developer" value="@developer">
                                <label for="@developer">@developer</label>
                                <br>
                            }
                        }

                        <h5>Kategorie</h5>
                        @using (var context = new ApplicationDbContext())
                        {
                            var genres = context.Genres
                            .Select(x => x.Name)
                            .Distinct()
                            .ToList();
                            foreach (var genre in genres)
                            {
                                <input type="checkbox" id="@genre" name="categories" value="@genre">
                                <label for="@genre">@genre</label>
                                <br>
                            }
                        }

                        <h5>Lagerbestand</h5>
                        <div>
                            <select id="standard-select" name="stock">
                                <option value="0" selected></option>
                                <option value="1">nicht Lagernd</option>
                                <option value="2">Weniger als 10</option>
                                <option value="3">11 oder mehr</option>
                            </select>
                        </div>

                        <h5>Status</h5>
                        <input type="checkbox" name="status" value="true">
                        <label for="type1"> Akitv</label><br>


                        <h5>Produktart</h5>
                        <input type="checkbox" id="type2" name="type" value="Physical" checked>
                        <label for="type2"> Physical</label><br>
                        <input type="checkbox" id="type3" name="type" value="Digital" checked>
                        <label for="type3"> Digital</label><br><br>

                        <button type="submit" class="btn btn-danger">Filtern</button>

                    </form>

                    <br />



                </div>
            </div>
        </div>


    </div>
</div>

<div class="container">
    <form asp-action="search" asp-controller="Product" style="float:right; text-align:right;">
        <div class="search-box">
            <button class="btn-search">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                </svg>
            </button>
            <input type="text" name="search" class="input-search" placeholder="Number/Name/Description">
        </div>
    </form>
    <table class="table" style="word-break:break-all;">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Developer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Genre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NetUnitPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Stock)
                </th>
                <th>
                    Type
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Developer.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Genre.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NetUnitPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Stock)
                    </td>
                    <td>
                        @{
                            using (WebShopLib.Models.ApplicationDbContext _context = new ApplicationDbContext())
                            {
                                var catName = _context.ProductCategories.Where(x => x.Id == item.ProductCategoryId).FirstOrDefault().Id.ToString();
                                if (catName.ToString() == "11")
                                {
                                    catName = "Physical";
                                }
                                else if (catName == "12")
                                {
                                    catName = "Digital";
                                }
                                @Html.Raw(catName)
                                ;
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z" />
                            </svg>
                        </a>
                        @if (currentUser.Role < 3)
                        {
                        <a href="/Product/ChangePrice?productId=@item.Id" style="margin-left:12px;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-currency-euro" viewBox="0 0 16 16">
                                <path d="M4 9.42h1.063C5.4 12.323 7.317 14 10.34 14c.622 0 1.167-.068 1.659-.185v-1.3c-.484.119-1.045.17-1.659.17-2.1 0-3.455-1.198-3.775-3.264h4.017v-.928H6.497v-.936c0-.11 0-.219.008-.329h4.078v-.927H6.618c.388-1.898 1.719-2.985 3.723-2.985.614 0 1.175.05 1.659.177V2.194A6.617 6.617 0 0 0 10.341 2c-2.928 0-4.82 1.569-5.244 4.3H4v.928h1.01v1.265H4v.928z" />
                            </svg>
                        </a>                            
                        }
                        <a href="/Product/DeleteProd?productId=@item.Id&userId=@currentUser.Id" style="margin-left:12px;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z" />
                            </svg>
                        </a>
                        @if (item.ProductCategoryId == 11) 
                        {
                            <a href="/ReOrder/NewReOrderFromProd?id=@item.Id" style="margin-left:12px;">
                                ReOrder
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>



<script>

    //Get the button
    let mybutton = document.getElementById("btn-back-to-top");

    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function () {
        scrollFunction();
    };

    function scrollFunction() {
        if (
            document.body.scrollTop > 20 ||
            document.documentElement.scrollTop > 20
        ) {
            mybutton.style.display = "block";
        } else {
            mybutton.style.display = "none";
        }
    }
    // When the user clicks on the button, scroll to the top of the document
    mybutton.addEventListener("click", backToTop);

    function backToTop() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
</script>